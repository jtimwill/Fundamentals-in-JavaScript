{"version":3,"sources":["components/navBar.jsx","utilities/primitive_types.js","utilities/data_structures.js","utilities/algorithms.js","utilities/oop.js","utilities/testing.js","utilities/paradigms.js","utilities/math_and_probabilty.js","utilities/parallel_computing.js","utilities/networking.js","utilities/operating_systems.js","utilities/unix_command_line.js","utilities/databases.js","utilities/languages.js","utilities/computer_hardware.js","utilities/electronics.js","utilities/design_patters.js","utilities/misc_cs.js","utilities/callbacks_js.js","components/accordion.jsx","components/main.jsx","components/footer.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","react_default","a","createElement","className","href","src","width","height","alt","primitive_types","name","data","id","language","tabs","data_structures","algorithms","oop","testing","paradigms","math_and_probabilty","parallel_computing","networking","operating_systems","unix_command_line","databases","languages","computer_hardware","electronics","design_patters","misc_cs","callbacks_js","Accordion","_ref","item","current_item","index","onItemSelect","current_tab","onTabSelect","onClick","concat","getAccordionCSSClass","length","map","tab","key","data-src","Main","state","handleItemSelect","_this","setState","handleTabSelect","_this2","this","categories","category","index1","accordion","Component","Footer","App","Fragment","navBar","main","footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1ed4dfbd.chunk.js","sourcesContent":["import React from 'react';\n\nconst NavBar = () => {\n  return (\n    <header>\n      <nav className=\"navbar navbar-dark bg-dark\">\n        <a className=\"navbar-brand\" href=\"#\">\n          <img\n            src=\"logo.png\"\n            width=\"30\"\n            height=\"30\"\n            className=\"d-inline-block align-top mx-1\"\n            alt=\"\"\n          >\n          </img>\n          Fundamentals\n        </a>\n      </nav>\n    </header>\n  );\n};\n\nexport default NavBar;\n","export default {\n  name: \"Primitive Types\",\n  data: [\n    {\n      id: 0,\n      name: \"Bit manipulation\",\n      language: \"js\",\n      tabs: [{\n        name: \"Question\",\n        data:\n`// Source: https://en.wikipedia.org/wiki/Mask_(computing)\n1001 & 0010 //=> 0000 (Query status of single bit. Returns 0 iff bit is off)\n1001 | 1111 //=> 1111 (Mask on)\n1001 & 1111 //=> 0000 (Mask off)\n1001 ^ 1111 //=> 0110 (Toggle bit values)\n\n// Source: https://www.cheatography.com/miracoli/cheat-sheets/bitmanipulation/\n(x>>5) & 1   // Test if bit 5 is set (same as \"query status\")\nx |= (1<<5)  // Set bit 5\nx &= ~(1<<5) // Clear bit 5\nx ^= (1<­­<5)  // Toggle bit 5\nx & 1        // Check if integer is odd\nx & (x-1)    // Turn off rightmost 1-bit\nx & (-x)     // Isolate rightmost 1-bit\nx | (x-1)    // Right propagate the rightmost 1-bit\nx | (x+1)    // Turn on the rightmost 0-bit\n~x & (x+1)   // Isolate rightmost 0-bit\nx & (x+1)    // Right propagate the rightmost 0-bit\nx <<= 1      // Multiply by 2\nx >>= 1      // Divide by 2\n1 << n       // 2^n\nx = (x | ' ') // Convert letter to lowercase\nx = (x & '_') // Convert letter to uppercase\na ^= b; b ^= a; a ^= b; // XOR swap\n(x << 4) | (x >> 4) // Swap nibbles: 0b11110000 => 0b00001111\n`\n             }]\n    },\n    {\n      id: 1,\n      name: \"Type conversion\",\n      language: \"js\",\n      tabs: [{\n        name: \"Question\",\n        data:\n`// Sources:\n//  https://medium.freecodecamp.org/js-type-coercion-explained-27ba3d9a2839\n//  https://www.w3schools.com/js/js_type_conversion.asp\n\n// To String:\nString(123.11) //=> \"123.11\"\n(123.11).toString() //=> \"123.11\"\n123.11 + \"\" //=> \"123.11\"\n\n// To Number:\nparseFloat(\"123.11\") //=> 123.11\nparseInt(\"123.99\") //=> 123\nNumber(\"123.11\") //=> 123.11\n+\"123.11\" //=> 123.11\n\n// To Boolean:\nBoolean(2) //=> true\n!!2 //=> true`\n      }]\n    },\n    {\n      id: 2,\n      name: \"Type checking\",\n      language: \"js\",\n      tabs: [{\n        name: \"Question\",\n        data:\n`// Source: https://javascript.info/types\n\n// There are 7 basic types in JavaScript.\nnumber // for numbers of any kind: integer or floating-point.\nstring // for strings. A string may have one or more characters, there’s no separate single-character type.\nboolean // for true/false.\nnull // for unknown values – a standalone type that has a single value null.\nundefined // for unassigned values – a standalone type that has a single value undefined.\nobject // for more complex data structures.\nsymbol // for unique identifiers.\n\n// The typeof operator allows us to see which type is stored in the variable.\n// 1. Two forms:\n  typeof x\n  typeof(x)\n// 2. Returns a string with the name of the type, like \"string\".\n// 3. For null returns \"object\" – that’s an error in the language, it’s not an object in fact.\n`\n             }]\n    },\n    {\n      id: 3,\n      name: \"Type sizes\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    }\n  ]\n};\n","export default {\n  name: \"Data Structures\",\n  data: [\n    {\n      id: 0,\n      name: \"Arrays and Strings\",\n      language: \"js\",\n      tabs: [\n              {\n                name: \"Question\",\n                data:\n`// Source:\n//  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\n//  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Indexed_collections#Array_object\n\n// Array JS\nlet colors = ['red', 'blue']; // Instantiation\ncolors[0]; //=> First item\ncolors[colors.length - 1]; //=> Last item\ncolors.forEach((item, index, array) => { // Loop over array\n  console.log(item, index);\n});\ncolors.push('green'); // Add item to end\ncolors.pop(); // Remove last item\ncolors.unshift('white'); // Add item to front\ncolors.shift(); // Remove item from front\ncolor.indexOf('red'); // Find index of item\ncolor.splice(pos, n); // Remove item(s) from index position(s)\ncolors.slice(); // Shallow copy\n\n// Array Methods (they all appear to mutate the caller)\nconcat() // joins two arrays and returns a new array.\njoin(deliminator = ',') // joins all elements of an array into a string.\nreverse() // transposes the elements of an array: the first array element\n          // becomes the last and the last becomes the first. *Mutates Caller*\nsort([compareFunction]) // sorts the elements of an array.\nfind(callback[, thisArg]) // returns a value in the array, if an element in the\n                          // array satisfies the provided testing function.\n                          // Otherwise undefined is returned.\n\n// Source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Text_formatting#String_objects\n// String JS\ncharAt, charCodeAt, codePointAt // Return the character or character code at the\n                                // specified position in string.\nindexOf, lastIndexOf // Return the position of specified substring in the string\n                     // or last position of specified substring, respectively.\nstartsWith, endsWith, includes // Returns whether or not the string starts, ends\n                               // or contains a specified string.\nconcat // Combines the text of two strings and returns a new string.\nfromCharCode, fromCodePoint // Constructs a string from the specified sequence\n                            // of Unicode values. This is a method of the String\n                            // class, not a String instance.\nsplit // Splits a String object into an array of strings by separating the\n      // string into substrings.\nslice // Extracts a section of a string and returns a new string.\nsubstring, substr // Return the specified subset of the string, either by\n                  // specifying the start and end indexes or the start index and\n                  // a length.\nmatch, replace, search //Work with regular expressions.\ntoLowerCase, toUpperCase // Return the string in all lowercase or all uppercase,\n                         // respectively.\nnormalize // Returns the Unicode Normalization Form of the calling string value.\nrepeat // Returns a string consisting of the elements of the object repeated the\n       // given times.\ntrim\t// Trims whitespace from the beginning and end of the string.\n`\n              }\n            ]\n    },\n    {\n      id: 1,\n      name: \"Linked List\",\n      language: \"js\",\n      tabs: [\n              {name: \"Setup\", data: \"Answer\"},\n              {name: \"Access\", data: \"Answer\"},\n              {name: \"Search\", data: \"Answer\"},\n              {name: \"Insert\", data: \"Answer\"},\n              {name: \"Delete\", data: \"Answer\"}\n            ]\n    },\n    {\n      id: 2,\n      name: \"Binary Tree\",\n      language: \"js\",\n      tabs: [\n              {name: \"Setup\", data: \"Answer\"},\n              {name: \"Search\", data: \"Answer\"},\n              {name: \"Insert\", data: \"Answer\"},\n              {name: \"Delete\", data: \"Answer\"},\n              {name: \"Pre-order\", data: \"Answer\"},\n              {name: \"In-order\", data: \"Answer\"},\n              {name: \"Post-order\", data: \"Answer\"}\n            ]\n    },\n    {\n      id: 3,\n      name: \"Stack\",\n      language: \"js\",\n      tabs: [\n              {name: \"Setup\", data: \"Answer\"},\n              {name: \"Push\", data: \"Answer\"},\n              {name: \"Pop\", data: \"Answer\"},\n              {name: \"Peek\", data: \"Answer\"},\n              {name: \"Max\", data: \"Answer\"},\n              {name: \"Empty?\", data: \"Answer\"}\n            ]\n    },\n    {\n      id: 4,\n      name: \"Queue\",\n      language: \"js\",\n      tabs: [\n              {name: \"Setup\", data: \"Answer\"},\n              {name: \"Enqueue\", data: \"Answer\"},\n              {name: \"Dequeue\", data: \"Answer\"},\n              {name: \"Peek front\", data: \"Answer\"},\n              {name: \"Peek back\", data: \"Answer\"},\n              {name: \"Max\", data: \"Answer\"}\n            ]\n    },\n    {\n      id: 5,\n      name: \"Hash Table\",\n      language: \"js\",\n      tabs: [\n              {name: \"Setup\", data: \"Answer\"},\n              {name: \"Insert\", data: \"Answer\"},\n              {name: \"Delete\", data: \"Answer\"},\n              {name: \"Keys\", data: \"Answer\"},\n              {name: \"Values\", data: \"Answer\"},\n              {name: \"Pairs\", data: \"Answer\"}\n            ]\n    },\n    {\n      id: 6,\n      name: \"Binary Search Tree (Balanced Binary Tree)\",\n      language: \"js\",\n      tabs: [\n              {name: \"Setup\", data: \"Answer\"},\n              {name: \"Max\", data: \"Answer\"},\n              {name: \"Min\", data: \"Answer\"},\n              {name: \"Next Largest\", data: \"Answer\"},\n              {name: \"Next Smallest\", data: \"Answer\"},\n              {name: \"Find\", data: \"Answer\"},\n              {name: \"Delete\", data: \"Answer\"}\n            ]\n    },\n    {\n      id: 7,\n      name: \"Heap\",\n      language: \"js\",\n      tabs: [\n              {name: \"Setup\", data: \"Answer\"},\n              {name: \"Heapify\", data: \"Answer\"},\n              {name: \"n-largest\", data: \"Answer\"},\n              {name: \"n-smallest\", data: \"Answer\"},\n              {name: \"push\", data: \"Answer\"},\n              {name: \"pop\", data: \"Answer\"},\n              {name: \"mix/max\", data: \"Answer\"}\n            ]\n    },\n    {\n      id: 8,\n      name: \"Graphs\",\n      language: \"js\",\n      tabs: [\n              {name: \"Setup\", data: \"Answer\"}\n            ]\n    },\n    {\n      id: 9,\n      name: \"Union Find\",\n      language: \"js\",\n      tabs: [\n              {name: \"Setup\", data: \"Answer\"}\n            ]\n    }\n  ]\n};\n","export default { name: \"Algorithms\", data: [\n  {\n    id: 0,\n    name: \"MergeSort\",\n    language: \"js\",\n    tabs: [\n      {\n        name: \"Pseudocode\",\n        data:\n`// Code Source: https://www.geeksforgeeks.org/merge-sort/\nMergeSort(arr[], l,  r)\nIf r > l\n1. Find the middle point to divide the array into two halves:\n  middle m = (l+r)/2\n2. Call mergeSort for first half:\n  Call mergeSort(arr, l, m)\n3. Call mergeSort for second half:\n  Call mergeSort(arr, m+1, r)\n4. Merge the two halves sorted in step 2 and 3:\n  Call merge(arr, l, m, r)`\n      },\n      {\n        name: \"JavaScript\",\n        data: `// Code Source: https://hackernoon.com/programming-with-js-merge-sort-deb677b777c0\n// Split the array into halves and merge them recursively\nfunction mergeSort (arr) {\n  if (arr.length === 1) {\n    // return once we hit an array with a single item\n    return arr\n  }\n\n  const middle = Math.floor(arr.length / 2) // get the middle item of the array rounded down\n  const left = arr.slice(0, middle) // items on the left side\n  const right = arr.slice(middle) // items on the right side\n\n  return merge(\n    mergeSort(left),\n    mergeSort(right)\n  )\n}\n\n// compare the arrays item by item and return the concatenated result\nfunction merge (left, right) {\n  let result = []\n  let indexLeft = 0\n  let indexRight = 0\n\n  while (indexLeft < left.length && indexRight < right.length) {\n    if (left[indexLeft] < right[indexRight]) {\n      result.push(left[indexLeft])\n      indexLeft++\n    } else {\n      result.push(right[indexRight])\n      indexRight++\n    }\n  }\n\n  return result.concat(left.slice(indexLeft)).concat(right.slice(indexRight))\n}\n\nconst list = [2, 5, 1, 3, 7, 2, 3, 8, 6, 3]\nconsole.log(mergeSort(list)) // [ 1, 2, 2, 3, 3, 3, 5, 6, 7, 8 ]`\n        }\n      ]\n    },\n    {\n      id: 1,\n      name: \"QuickSort\",\n      language: \"js\",\n      tabs: [{\n        name: \"Pseudocode\",\n        data:\n`// Source: https://www.tutorialspoint.com/data_structures_algorithms/quick_sort_algorithm.htm\n\n// Quick Sort Pivot\nStep 1 − Choose the highest index value has pivot\nStep 2 − Take two variables to point left and right of the list excluding pivot\nStep 3 − left points to the low index\nStep 4 − right points to the high\nStep 5 − while value at left is less than pivot move right\nStep 6 − while value at right is greater than pivot move left\nStep 7 − if both step 5 and step 6 does not match swap left and right\nStep 8 − if left ≥ right, the point where they met is new pivot\n\n// Quick Sort\nStep 1 − Make the right-most index value pivot\nStep 2 − partition the array using pivot value\nStep 3 − quicksort left partition recursively\nStep 4 − quicksort right partition recursively\n`\n    },\n    {\n      name: \"JavaScript\",\n      data:\n`// Code Source: http://blog.benoitvallon.com/sorting-algorithms-in-javascript/the-quicksort-algorithm/\n\n// array to sort\nvar array = [9, 2, 5, 6, 4, 3, 7, 10, 1, 8];\n\n// basic implementation (pivot is the first element of the array)\nfunction quicksortBasic(array) {\n  if(array.length < 2) {\n    return array;\n  }\n\n  var pivot = array[0];\n  var lesser = [];\n  var greater = [];\n\n  for(var i = 1; i < array.length; i++) {\n    if(array[i] < pivot) {\n      lesser.push(array[i]);\n    } else {\n      greater.push(array[i]);\n    }\n  }\n\n  return quicksortBasic(lesser).concat(pivot, quicksortBasic(greater));\n}\n\nconsole.log(quicksortBasic(array.slice())); // => [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]\n\n// swap function helper\nfunction swap(array, i, j) {\n  var temp = array[i];\n  array[i] = array[j];\n  array[j] = temp;\n}\n\n// classic implementation (with Hoare or Lomuto partition scheme, you can comment either one method or the other to see the difference)\nfunction quicksort(array, left, right) {\n  left = left || 0;\n  right = right || array.length - 1;\n\n  // var pivot = partitionLomuto(array, left, right); // you can play with both partition\n  var pivot = partitionHoare(array, left, right); // you can play with both partition\n\n  if(left < pivot - 1) {\n    quicksort(array, left, pivot - 1);\n  }\n  if(right > pivot) {\n    quicksort(array, pivot, right);\n  }\n  return array;\n}\n// Lomuto partition scheme, it is less efficient than the Hoare partition scheme\nfunction partitionLomuto(array, left, right) {\n  var pivot = right;\n  var i = left;\n\n  for(var j = left; j < right; j++) {\n    if(array[j] <= array[pivot]) {\n      swap(array, i , j);\n      i = i + 1;\n    }\n  }\n  swap(array, i, j);\n  return i;\n}\n// Hoare partition scheme, it is more efficient than the Lomuto partition scheme because it does three times fewer swaps on average\nfunction partitionHoare(array, left, right) {\n  var pivot = Math.floor((left + right) / 2 );\n\n  while(left <= right) {\n    while(array[left] < array[pivot]) {\n      left++;\n    }\n    while(array[right] > array[pivot]) {\n      right--;\n    }\n    if(left <= right) {\n      swap(array, left, right);\n      left++;\n      right--;\n    }\n  }\n  return left;\n}\n\nconsole.log(quicksort(array.slice())); // => [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]\n`\n    }]\n    },\n    {\n      id: 2,\n      name: \"Binary Search\",\n      language: \"js\",\n      tabs: [\n        {\n          name: \"Pseudocode\",\n          data:\n`// Source: https://en.wikipedia.org/wiki/Binary_search_algorithm\nfunction binary_search(A, n, T):\n    L := 0\n    R := n − 1\n    while L <= R:\n        m := floor((L + R) / 2)\n        if A[m] < T:\n            L := m + 1\n        else if A[m] > T:\n            R := m - 1\n        else:\n            return m\n    return unsuccessful\n`\n        },\n        {\n          name: \"JavaScript\",\n          data:\n`// Code Source: https://hackernoon.com/programming-with-js-binary-search-aaf86cef9cb3\nfunction binarySearch (list, value) {\n  // initial values for start, middle and end\n  let start = 0\n  let stop = list.length - 1\n  let middle = Math.floor((start + stop) / 2)\n\n  // While the middle is not what we're looking for and the list does not have a single item\n  while (list[middle] !== value && start < stop) {\n    if (value < list[middle]) {\n      stop = middle - 1\n    } else {\n      start = middle + 1\n    }\n\n    // recalculate middle on every iteration\n    middle = Math.floor((start + stop) / 2)\n  }\n\n  // if the current middle item is what we're looking for return it's index, else return -1\n  return (list[middle] !== value) ? -1 : middle\n}\n\nconst list = [2, 5, 8, 9, 13, 45, 67, 99]\nconsole.log(binarySearch(list, 99)) // 7 -> returns the index of the item\n`\n        }\n      ]\n    },\n    {\n      id: 3,\n      name: \"Depth-first Search\",\n      language: \"js\",\n      tabs: [\n        {\n          name: \"Pseudocode\",\n          data:\n`// Source: https://en.wikipedia.org/wiki/Depth-first_search\n\n// Recursive:\n1  procedure DFS(G,v):\n2      label v as discovered\n3      for all edges from v to w in G.adjacentEdges(v) do\n4          if vertex w is not labeled as discovered then\n5              recursively call DFS(G,w)\n\n// Iterative:\n1  procedure DFS-iterative(G,v):\n2      let S be a stack\n3      S.push(v)\n4      while S is not empty\n5          v = S.pop()\n6          if v is not labeled as discovered:\n7              label v as discovered\n8              for all edges from v to w in G.adjacentEdges(v) do\n9                  S.push(w)\n`\n        },\n        {\n          name: \"JavaScript\",\n          data: ``\n        }\n      ]\n    },\n    {\n      id: 4,\n      name: \"Breadth-first Search\",\n      language: \"js\",\n      tabs: [\n        {\n          name: \"Pseudocode\",\n          data:\n`// Source: https://en.wikipedia.org/wiki/Breadth-first_search\ndef breadth_first_search(problem):\n  // a FIFO open_set\n  open_set = Queue()\n\n  // an empty set to maintain visited nodes\n  closed_set = set()\n\n  // a dictionary to maintain meta information (used for path formation)\n  // key -> (parent state, action to reach child)\n  meta = dict()\n\n  // initialize\n  root = problem.get_root()\n  meta[root] = (None, None)\n  open_set.enqueue(root)\n\n  // For each node on the current level expand and process, if no children\n  // (leaf) then unwind\n  while not open_set.is_empty():\n\n    subtree_root = open_set.dequeue()\n\n    // We found the node we wanted so stop and emit a path.\n    if problem.is_goal(subtree_root):\n      return construct_path(subtree_root, meta)\n\n    // For each child of the current tree process\n    for (child, action) in problem.get_successors(subtree_root):\n\n      // The node has already been processed, so skip over it\n      if child in closed_set:\n        continue\n\n      // The child is not enqueued to be processed, so enqueue this level of\n      // children to be expanded\n      if child not in open_set:\n        meta[child] = (subtree_root, action) # create metadata for these nodes\n        open_set.enqueue(child)              # enqueue these nodes\n\n    // We finished processing the root of this subtree, so add it to the closed\n    // set\n    closed_set.add(subtree_root)\n\n// Produce a backtrace of the actions taken to find the goal node, using the\n// recorded meta dictionary\ndef construct_path(state, meta):\n  action_list = list()\n\n  // Continue until you reach root meta data (i.e. (None, None))\n  while meta[state][0] is not None:\n    state, action = meta[state]\n    action_list.append(action)\n\n  action_list.reverse()\n  return action_list\n`\n        },\n        {\n          name: \"JavaScript\",\n          data: ``\n        }\n      ]\n    }\n  ]\n};\n","export default {\n  name: \"Object-oriented Programming\",\n  data: [\n    {\n      id: 0,\n      name: \"Inheritance (Object-based/Prototypal vs. Class-based)\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 1,\n      name: \"Encapsulation\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 2,\n      name: \"Polymorphism\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 3,\n      name: \"Abstraction\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 4,\n      name: \"Composition\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 5,\n      name: \"Mixin\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 6,\n      name: \"Instance vs. Class Variables/Methods\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    }\n  ]\n};\n","export default {\n  name: \"Testing\",\n  data: [\n    {\n      id: 0,\n      name: \"Unit Tests\",\n      language: \"js\",\n      tabs: [{\n        name: \"Question\",\n        data:\n`// Source: https://en.wikipedia.org/wiki/Unit_testing\nIn computer programming, unit testing is a software testing method by which individual units of source code, sets of one or more computer program modules together with associated control data, usage procedures, and operating procedures, are tested to determine whether they are fit for use.[1]\n`\n      }]\n    },\n    {\n      id: 1,\n      name: \"Integration Tests\",\n      language: \"js\",\n      tabs: [{\n        name: \"Question\",\n        data:\n`// Source: https://en.wikipedia.org/wiki/Integration_testing\nIntegration testing (sometimes called integration and testing, abbreviated I&T) is the phase in software testing in which individual software modules are combined and tested as a group.\n`\n      }]\n    },\n    {\n      id: 2,\n      name: \"End-to-end Tests\",\n      language: \"js\",\n      tabs: [{\n        name: \"Question\",\n        data:\n`// Source: https://www.softwaretestinghelp.com/what-is-end-to-end-testing/\nEnd-to-end testing is a Software testing methodology to test an application flow from start to end. The purpose of End to end testing is to simulate the real user scenario and validate the system under test and its components for integration and data integrity.\n`\n      }]\n    },\n    {\n      id: 3,\n      name: \"TDD (RGR)\",\n      language: \"js\",\n      tabs: [{\n        name: \"Question\",\n        data:\n`// Source: https://en.wikipedia.org/wiki/Test-driven_development\nTest-driven development (TDD) is a software development process that relies on the repetition of a very short development cycle: requirements are turned into very specific test cases, then the software is improved to pass the new tests, only. This is opposed to software development that allows software to be added that is not proven to meet requirements.\n`\n      }]\n    }\n  ]\n};\n","export default {\n  name: \"Paradigms\",\n  data: [\n    {\n      id: 0,\n      name: \"Divide and Conquer (Recursion)\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 1,\n      name: \"Randomized Algorithms\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 2,\n      name: \"Greedy Algorithms\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 3,\n      name: \"Dynamic Programming\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 4,\n      name: \"Brute Force\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    }\n  ]\n};\n","export default {\n  name: \"Math and Probability\",\n  data: [\n    {\n      id: 0,\n      name: \"Logarithms\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 1,\n      name: \"Complex Number Representation\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    }\n  ]\n};\n","export default {\n  name: \"Parallel Computing\",\n  data: [\n    {\n      id: 0,\n      name: \"Multi-core processors vs. single core\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 1,\n      name: \"Parallelism vs. Concurrency\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 2,\n      name: \"Amdahl's Law\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 3,\n      name: \"Gustafson's Law\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    }\n  ]\n};\n","export default {\n  name: \"Networking\",\n  data: [\n    {\n      id: 0,\n      name: \"OSI vs TCP/IP\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 1,\n      name: \"Application Layer\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 2,\n      name: \"Transport Layer\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 3,\n      name: \"Network Layer\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 4,\n      name: \"Link Layer\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 5,\n      name: \"IP\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 6,\n      name: \"TCP vs UDP\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 7,\n      name: \"IPv4/IPv6 Address Assignment\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 8,\n      name: \"ARP\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 9,\n      name: \"ICMP\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 10,\n      name: \"End-to-end Principle\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 11,\n      name: \"Three Error Detection Algorithms\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 12,\n      name: \"Packet\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 13,\n      name: \"Packet Switching\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 14,\n      name: \"Forwarding Table\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 15,\n      name: \"Ethernet Switch vs. Internet Router\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 16,\n      name: \"NATs and the New Hourglass\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 17,\n      name: \"HTTP\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 18,\n      name: \"DNS Architecture\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 19,\n      name: \"DHCP\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 20,\n      name: \"Internet Routing Protocols\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 21,\n      name: \"Internet Structure\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 22,\n      name: \"Shannon Capacity, Shannon Limit\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 23,\n      name: \"Modulation\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 24,\n      name: \"Signal to Noise Ratio (SNR)\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 25,\n      name: \"Coding (list a few algorithms)\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 26,\n      name: \"Why is data transmitted using a clock?\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 27,\n      name: \"What are Asynchronous communications?\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 28,\n      name: \"What are Synchronous communications?\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 29,\n      name: \"How is the radio spectrum allocated in the US (that big map)?\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 30,\n      name: \"How does Signal Strength work with wireless?\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 31,\n      name: \"Ethernet, Ethernet most commonly used wired network\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 32,\n      name: \"Ethernet Hubs vs. Switches\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 33,\n      name: \"The fundamental network security problem\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 34,\n      name: \"Three Ways Communication Can Be Compromised\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 35,\n      name: \"Three Security Principles\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 36,\n      name: \"The most important network security lesson\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 37,\n      name: \"Wireless Communication: Digital vs. Analog\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 38,\n      name: \"Wired Communication: Sync Serial vs. Async Serial vs. Parallel\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 39,\n      name: \"UART\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    }\n  ]\n};\n","export default {\n  name: \"Operating Systems\",\n  data: [\n    {\n      id: 0,\n      name: \"Operating System Definition\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 1,\n      name: \"Kernel\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 2,\n      name: \"What happens when a program runs? (Von Neumann)\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 3,\n      name: \"CPU Virtualization\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 4,\n      name: \"Memory Virtualization\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 5,\n      name: \"Concurrency\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 6,\n      name: \"Process\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 7,\n      name: \"Threads\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 8,\n      name: \"Persistence\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 9,\n      name: \"3 OS Abstractions\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 10,\n      name: \"System Call\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 11,\n      name: \"Trap\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 12,\n      name: \"Context Switching\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 13,\n      name: \"Caches (Single-CPU vs. Multi-CPU Hardware)\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 14,\n      name: \"Address Space Components (Program Code, Stack, Heap)\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 15,\n      name: \"Memory Problems (Leak, Stack Overflow, Segmentation Fault, Page Fault etc.)\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 16,\n      name: \"Internal vs. External Fragmentation\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 17,\n      name: \"Paging\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 18,\n      name: \"Two Types of Locality\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 19,\n      name: \"Single threaded process vs. Multi-threaded process\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 20,\n      name: \"Context Switching between threads\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 21,\n      name: \"Race condition, critical section, atomicity, transaction\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 22,\n      name: \"Multi-threading Data Structures, Locks, Condition Variables, Mutexes, Semaphore\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 23,\n      name: \"Famous Concurrency Problems: bounded buffer, dining philosophers, etc.\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 24,\n      name: \"Common problems with concurrency (Non-Deadlock, Deadlock, Order-Violation)\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 25,\n      name: \"Event-Based Concurrency (e.g. Node.JS)\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 26,\n      name: \"Blocking vs. Non-Blocking Interfaces (Event-based Concurrency)\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 27,\n      name: \"What does a canonical device consist of?\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 28,\n      name: \"Interrupt vs. Polling\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 29,\n      name: \"Device Driver\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 30,\n      name: \"Single HDD vs. RAIDs\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 31,\n      name: \"What is the File System, Ideal file system, File System Mental Model\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 32,\n      name: \"What is a File, Directory, Directory Tree\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 33,\n      name: \"Hard link vs. Link\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 34,\n      name: \"Inode vs Inumber\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 35,\n      name: \"Crash-consistency Problem and solutions\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    }\n  ]\n};\n","export default {\n  name: \"Unix Command Line\",\n  data: [\n    {\n      id: 0,\n      name: \"What is the shell?\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 1,\n      name: \"What is Bash?\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 2,\n      name: \"What is text?\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 3,\n      name: \"What is the typical directory structure on a linux system?\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 4,\n      name: \"What Exactly Are Commands?\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 5,\n      name: \"What is I/O redirection?\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 6,\n      name: \"What are pipelines?\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 7,\n      name: \"What are PIDs?\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 8,\n      name: \"What are startup files?\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 9,\n      name: \"How can you modify the environment?\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 10,\n      name: \"What is FTP?\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 11,\n      name: \"What is SSH?\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 12,\n      name: \"What Are Shell Scripts?\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    }\n  ]\n};\n","export default {\n  name: \"Databases\",\n  data: [\n    {\n      id: 0,\n      name: \"ORM\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 1,\n      name: \"SQL Definition\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 2,\n      name: \"RDBMS\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 3,\n      name: \"Relational vs Non Relational Databases\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 4,\n      name: \"SQL Sub-languages\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 5,\n      name: \"DB Normalization\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n\n    },\n    {\n      id: 6,\n      name: \"SQL vs NoSQL\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 7,\n      name: \"DB Index\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n\n    },\n    {\n      id: 8,\n      name: \"Foreign Key vs Primary Key\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 9,\n      name: \"Three Entity Relationship Types\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 10,\n      name: \"Types of Joins in SQL\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    }\n  ]\n};\n","export default {\n  name:\"Languages\",\n  data: [\n    {\n      id: 0,\n      name: \"Generations: Machine Code, Assembly Language, Procedural Languages\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 1,\n      name: \"Dynamic vs. Static Languages\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 2,\n      name: \"Compiled Languages vs. Interpreted Languages\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 3,\n      name: \"C Integration\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 4,\n      name: \"Garbage Collection\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 5,\n      name: \"Static vs. Dynamic Typing\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 6,\n      name: \"Higher Order Functions & Lexical Closures\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 7,\n      name: \"Pointer Arithmetic\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 8,\n      name: \"Interpreter vs. Compiler\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 9,\n      name: \"Java vs. JavaScript\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    }\n  ]\n};\n","export default {\n  name: \"Computer Hardware\",\n  data: [\n    {\n      id: 0,\n      name: \"Boolean Logic (Nand Gate, Adder)\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 1,\n      name: \"VHDL\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 2,\n      name: \"Sequential Logic (Flip-flop, Register, Counter)\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 3,\n      name: \"Memory (RAM, ROM, Firmware)\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 4,\n      name: \"I/O\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 5,\n      name: \"CPU (ALU, Data/Address Registers, Control Unit, Cache, Program Counter)\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 6,\n      name: \"Fetch Execution Cycle\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 7,\n      name: \"The Stored Program Concept\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 8,\n      name: \"Von Neumann vs. Harvard (Data Memory, Instruction Memory)\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 9,\n      name: \"Computer System (Memory, CPU, I/O)\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 10,\n      name: \"RISC Pipeline (vs. CISC)\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 11,\n      name: \"Moore's Law\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 12,\n      name: \"Locality (Memory Access Hierarchy)\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 13,\n      name: \"Numbers Everyone Should Know (latency)\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 14,\n      name: \"Micro-controller vs Microprocessor\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 15,\n      name: \"Multicore Processor\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    }\n  ]\n};\n","export default {\n  name: \"Electronics\",\n  data: [\n    {\n      id: 0,\n      name: \"Electrical Current\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 1,\n      name: \"Conventional vs. Actual Current Flow\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 2,\n      name: \"Voltage\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 3,\n      name: \"Resistance vs Resistivity\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 4,\n      name: \"Conductivity\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 5,\n      name: \"Heat vs. Power\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 6,\n      name: \"Grounds\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 7,\n      name: \"Current Divider (AC/DC)\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 8,\n      name: \"Voltage Divider (AC/DC)\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 9,\n      name: \"AC generation\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 10,\n      name: \"AC importance\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 11,\n      name: \"RMS vs. Peak-to-peak\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 12,\n      name: \"Capacitors\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 13,\n      name: \"Inductors\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 14,\n      name: \"Complex Resistance, Capacitive Reactance, Inductive Reactance\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 15,\n      name: \"Ohms Law's Law (AC/DC)\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 16,\n      name: \"Apparent Power vs. Reactive Power vs. Real Power\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 17,\n      name: \"Power Factor\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 18,\n      name: \"Resonant Circuits\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 19,\n      name: \"Two-port networks and filters\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 20,\n      name: \"Phasor Diagram\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 21,\n      name: \"Impedance (Resistors, Capacitors, Inductors)\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 22,\n      name: \"Maxwell's Equations\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 23,\n      name: \"Types of Motors\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 24,\n      name: \"Transistor Physics\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 25,\n      name: \"Transformer Types and Applications\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 26,\n      name: \"Electricity Distribution\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 27,\n      name: \"Oscillator Circuits (Harmonic)\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 28,\n      name: \"Sensors\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 29,\n      name: \"Electronic Switches\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    }\n  ]\n};\n","export default {\n  name: \"Design Patterns\",\n  data: [\n    {\n      id: 0,\n      name: \"Module\",\n      language: \"js\",\n      tabs: [{\n        name: \"Question\",\n        data:\n`// Source: https://scotch.io/bar-talk/4-javascript-design-patterns-you-should-know\n\n// Basic:\n(function() {\n\n    // declare private variables and/or functions\n\n    return {\n      // declare public variables and/or functions\n    }\n\n})();\n\n// Revealing Module Pattern\nvar Exposer = (function() {\n  var privateVariable = 10;\n\n  var privateMethod = function() {\n    console.log('Inside a private method!');\n    privateVariable++;\n  }\n\n  var methodToExpose = function() {\n    console.log('This is a method I want to expose!');\n  }\n\n  var otherMethodIWantToExpose = function() {\n    privateMethod();\n  }\n\n  return {\n      first: methodToExpose,\n      second: otherMethodIWantToExpose\n  };\n})();\n\nExposer.first();        // Output: This is a method I want to expose!\nExposer.second();       // Output: Inside a private method!\nExposer.methodToExpose; // undefined\n`\n      }]\n    },\n    {\n      id: 1,\n      name: \"Prototype\",\n      language: \"js\",\n      tabs: [{\n        name: \"Question\",\n        data:\n`// Source: https://scotch.io/bar-talk/4-javascript-design-patterns-you-should-know\n\n// Basic:\nvar TeslaModelS = function() {\n  this.numWheels    = 4;\n  this.manufacturer = 'Tesla';\n  this.make         = 'Model S';\n}\n\nTeslaModelS.prototype.go = function() {\n  // Rotate wheels\n}\n\nTeslaModelS.prototype.stop = function() {\n  // Apply brake pads\n}\n\n// Revealing Prototype Pattern:\nvar TeslaModelS = function() {\n  this.numWheels    = 4;\n  this.manufacturer = 'Tesla';\n  this.make         = 'Model S';\n}\n\nTeslaModelS.prototype = function() {\n\n  var go = function() {\n    // Rotate wheels\n  };\n\n  var stop = function() {\n    // Apply brake pads\n  };\n\n  return {\n    pressBrakePedal: stop,\n    pressGasPedal: go\n  }\n\n}();\n`\n      }]\n    },\n    {\n      id: 2,\n      name: \"Observer\",\n      language: \"js\",\n      tabs: [{\n        name: \"Question\",\n        data:\n`// Source: https://scotch.io/bar-talk/4-javascript-design-patterns-you-should-know\n\n// Controller 1\n$scope.$on('nameChanged', function(event, args) {\n    $scope.name = args.name;\n});\n\n...\n\n// Controller 2\n$scope.userNameChanged = function(name) {\n    $scope.$emit('nameChanged', {name: name});\n};\n\n//\n`\n      }]\n    },\n    {\n      id: 3,\n      name: \"Singleton\",\n      language: \"js\",\n      tabs: [{\n        name: \"Question\",\n        data:\n`// Source: https://scotch.io/bar-talk/4-javascript-design-patterns-you-should-know\nvar printer = (function () {\n\n  var printerInstance;\n\n  function create () {\n\n    function print() {\n      // underlying printer mechanics\n    }\n\n    function turnOn() {\n      // warm up\n      // check for paper\n    }\n\n    return {\n      // public + private states and behaviors\n      print: print,\n      turnOn: turnOn\n    };\n  }\n\n  return {\n    getInstance: function() {\n      if(!printerInstance) {\n        printerInstance = create();\n      }\n      return printerInstance;\n    }\n  };\n\n  function Singleton () {\n    if(!printerInstance) {\n      printerInstance = intialize();\n    }\n  };\n\n})();\n`\n      }]\n    }\n  ]\n};\n","export default {\n  name: \"Misc. Computer Science\",\n  data: [\n    {\n      id: 0,\n      name: \"Scalability and Memory Limits\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 1,\n      name: \"Operations/second\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 2,\n      name: \"Words in Main Memory\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 3,\n      name: \"Touch all words in 1 second\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 4,\n      name: \"Operation Nanoseconds\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 5,\n      name: \"Why 2s Comp is Used\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 6,\n      name: \"P vs NP (Reductions)\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 7,\n      name: \"P vs NP (Completeness)\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 8,\n      name: \"P = NP if...\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 9,\n      name: \"3 strategies for NP-complete problems\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 10,\n      name: \"Cryptography\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 11,\n      name: \"Private/Public Key Cryptography\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 12,\n      name: \"Diffie-Hellman Key Exchange\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 13,\n      name: \"RSA Encryption\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    },\n    {\n      id: 14,\n      name: \"Powers of 2\",\n      language: \"js\",\n      tabs: [{name: \"Question\", data: \"Answer\"}]\n    }\n  ]\n};\n","export default {\n  name: \"JavaScript Callbacks\",\n  data: [\n    {\n      id: 0,\n      name: \"Callbacks\",\n      language: \"js\",\n      tabs: [{name: \"Callbacks\", data: \"Answer\"},\n             {name: \"Promises\", data: \"Answer\"},\n             {name: \"Async/Await\", data: \"Answer\"}]\n    }\n  ]\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Accordion = ({ item, current_item, index, onItemSelect, current_tab, onTabSelect }) => {\n  function getAccordionCSSClass(item, current_item) {\n    return item === current_item ? \"custom-show\" : \"custom-hide-2\"\n  }\n  return (\n    <div>\n      <div className=\"card-header custom-hover\" onClick={() => onItemSelect(item)}>\n        <span className=\"font-weight-bold\">{`${index+1}. ${item.name}`}</span>\n      </div>\n        <div className={getAccordionCSSClass(item, current_item)}>\n          <div className=\"card-body\">\n            <ul className=\"nav nav-tabs\">\n              {item.tabs.length > 1 && item.tabs.map((tab, index) => (\n                <li key={index} className=\"nav-item\" onClick={() => onTabSelect(index)}>\n                  <div className={current_tab === index ? \"custom-pointer nav-link active\" : \"custom-pointer nav-link\"}>\n                    {tab.name}\n                  </div>\n                </li>\n              ))}\n            </ul>\n            {item.tabs.map((tab, index) => (\n              <div key={index} className=\"tab-content\">\n                <div className={current_tab === index ? \"tab-pane show active\" : \"tab-pane\"}>\n                  <pre className=\"line-numbers\" data-src=\"prism-line-numbers.js\">\n                    <code className=\"language-js\">{tab.data}</code>\n                  </pre>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n    </div>\n  );\n};\n\nAccordion.propTypes = {\n  item: PropTypes.object.isRequired,\n  onItemSelect: PropTypes.func.isRequired,\n  current_item: PropTypes.object.isRequired,\n  index: PropTypes.number.isRequired,\n  current_tab: PropTypes.number.isRequired,\n  onTabSelect: PropTypes.func.isRequired\n};\n\nexport default Accordion;\n","import React, { Component } from 'react';\nimport primitive_types from '../utilities/primitive_types.js';\nimport data_structures from '../utilities/data_structures.js';\nimport algorithms from '../utilities/algorithms.js';\nimport oop from '../utilities/oop.js';\nimport testing from '../utilities/testing.js';\nimport paradigms from '../utilities/paradigms.js';\nimport math_and_probabilty from '../utilities/math_and_probabilty.js';\nimport parallel_computing from '../utilities/parallel_computing.js';\nimport networking from '../utilities/networking.js';\nimport operating_systems from '../utilities/operating_systems.js';\nimport unix_command_line from '../utilities/unix_command_line.js';\nimport databases from '../utilities/databases.js';\nimport languages from '../utilities/languages.js';\nimport computer_hardware from '../utilities/computer_hardware.js';\nimport electronics from '../utilities/electronics.js';\nimport design_patters from '../utilities/design_patters.js';\nimport misc_cs from '../utilities/misc_cs.js';\nimport callbacks_js from '../utilities/callbacks_js.js';\nimport Accordion from './accordion';\n\nclass Main extends Component {\n  state = {\n    current_item: {},\n    current_tab: 0\n  };\n\n  handleItemSelect = item => {\n    if (item === this.state.current_item) {\n      item = {};\n    }\n    this.setState({ current_item: item, current_tab: 0 });\n  };\n\n  handleTabSelect = tab => {\n    this.setState({ current_tab: tab});\n  };\n\n  render() {\n    const categories = [\n      primitive_types,\n      data_structures,\n      algorithms,\n      callbacks_js,\n      oop,\n      testing,\n      paradigms,\n      math_and_probabilty,\n      parallel_computing,\n      networking,\n      operating_systems,\n      unix_command_line,\n      databases,\n      languages,\n      computer_hardware,\n      electronics,\n      design_patters,\n      misc_cs\n    ];\n    return (\n      <main className=\"bg-secondary custom-main\">\n        <div className=\"jumbotron jumbotron-fluid\">\n          <div className=\"container\">\n            <h1 className=\"display-4\">Software Fundamentals in JS</h1>\n            <p className=\"lead\">\n              This is a collection of important concepts and useful resources.\n            </p>\n          </div>\n        </div>\n        {categories.map((category, index1) => (\n          <div key={index1} className=\"accordion custom-accordion\">\n            <h3 className=\"text-light\">{category.name}</h3>\n            {category.data.map((item, index) => (\n              <div\n                key={item.id}\n                className={\"my-1 card \" +\n                (item === this.state.current_item ? \"border-primary\" : \"\")}\n              >\n              <Accordion\n                item={item}\n                current_item={this.state.current_item}\n                index={index}\n                onItemSelect={this.handleItemSelect}\n                current_tab={this.state.current_tab}\n                onTabSelect={this.handleTabSelect}\n              />\n              </div>\n            ))}\n          </div>\n        ))}\n      </main>\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <footer>\n      <nav className=\"navbar fixed-bottom navbar-light bg-light\">\n        <a className=\"navbar-brand\" href=\"#\">\n          <div className=\"custom-text\">© 2019 jtimwill@gmail.com</div>\n        </a>\n      </nav>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport NavBar from './components/navBar';\nimport Main from './components/main';\nimport Footer from './components/footer';\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar/>\n        <Main/>\n        <Footer/>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './custom.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}